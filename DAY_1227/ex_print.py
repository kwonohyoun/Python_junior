'''
출력 기능의 내장함수 print()
'''
# 1개 데이터 화면 출력
print(1000)

# 2개 데이터 화면 출력 (띄어쓰기 안해도 자동으로 띄어짐)
print(100, 200)
print(100, "Good Luck")

# 여러 개 데이터 화면 출력
print("ABC", 5., "1000", "HappyNewYear") # print 함수는 저장되는 결과값이 없음, 즉 변수에 저장해도 None 값이 나옴

# 데이터가 없는 경우 화면 출력
print() # 아무 것도 안뜸

''' 데이터 출력을 좀 더 편한게 하는 방법들
>> 문자열과 숫자가 섞여 있는 경우가 대부분
>> [출력] 오늘은 2024년 12월 27일입니다.
'''
print('오늘은 2024년 12월 27일입니다.')

year = 2024
month = 12
day = 27

print('오늘은', year, '년', month, '월', day, '일입니다.') # 매우 번거로움

# 변수를 str에서 적용해서 출력하는 방법 --(1) %알파벳1개(d: 10진수, %f: 실수, %s: 문자열) >> 서식지정자방식
# '당신의 나이는 %d입니다.' %age
# '평균이 %f입니다.' %avg
# '당신의 고향은 %s입니다.' %name
age = 26
avg = 98.4
name = '권오영'
print('당신의 나이는 %d입니다.' %age)
print('평균이 %f점 입니다.' %avg)
print('당신의 이름은 %s입니다.' %name)
print('당신의 나이는 %d세, 평균은 %f점, 이름은 %s이군요' %(age, avg, name))

# 변수를 str에서 적용해서 출력하는 방법 --(2) f' {변수명} ' >> f-스트링방식(대문자 F도 가능)
print(f'당신의 나이는 {age}세 입니다.')
print(F'당신의 평균은 {avg}점 입니다.')
print(f'당신의 나이는 {age}세 이고, 평균은 {avg}점, 이름은 {name}이군요')

# [실습1] 본인 이름, 전공, 나이를 메모리에 저장하기
# 저장된 정보를 아래와 같은 형태로 출력하세요.(한줄 띄우기는 \n)
# 이름: 홍길동
# 전공: 체육학과
# 나이: 21세
name = '권오영'
major = '화학공학부'
age = 26
print(f'이름: {name}\n전공: {major}\n나이: {age}세')

# 특별한 의미를 가지는 문자 조합 >> 이스케이프문자(\알파벳)
# \n: new line(줄바꿈)
# \t: tap(tap키 만큼 들여쓰기)

# print() 함수에서 여러 개의 데이터를 분리해서 출력해주는 방법
# 기본: 공백
# 변경: sep 매개변수 >> 여러 개 데이터를 화면에 보기 좋게 분리시켜주는 방법 설정
print("홍","길동") # '홍'과 '길동'이 공백으로 나눠져서 출력
print('홍','길동','의적', sep="") # sep를 통해 공백 제거
print('홍', '길동', '의적', sep='*') # sep를 통해 공백을 *로 바꿈

# print() 함수에서 데이터 화면 출력 후 끝에 추가하는 문자 지정
# 기본: 줄바꿈 이스케이프 문자 \n
# 변경: end 매개변서 >> 화면 출력 후 원하는 문자를 지정 가능
print("A", end='') # >> 'A'
print("B", end='') # >> 'B'
print("C") # >> 'C\n', 실행 결과 줄이 바뀌지 않고 ABC라고 출력됨.

print("A", end='')
print("B", end='****\n') # AB****라고 출력

# [실습] 아래와 같이 출력이 되도록 코드를 작성하세요(단, print() 함수는 1개만 사용)
# ABCDEFG
# 123456789
# ABCDEFG
print('ABCDEFG\n123456789\nABCDEFG') #방법1. 이스케이프 문자
print('ABCDEFG', '123456789', 'ABCDEFG',sep='\n') #방법2. print() 함수의 sep
