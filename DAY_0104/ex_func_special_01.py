# ----------------------------------------------------------------------------------------------
# 다양한 함수의 형태 - 특별한 함수 (1)
# - 매개변수의 갯수를 유동적으로 가변으로 하는 함수
# - 형태: def 함수명( *data ):
# - 가변 인자 함수
# - 매개 변수 갯수: 0개 ~ n개
# ----------------------------------------------------------------------------------------------
# 2개 정수를 덧셈 후 결과를 반환하는 함수 생성 ======================================================
def addTwo(x, y):
    return x + y

def addfive(x, y, z, a, b):
    return x + y + z + a + b
def addfive(x, y, z):
    return x + y + z

# ----------------------------------------------------------------------------------------------
# 함수 기능: 전달 받은 숫자를 모두 덧셈한 결과 반환 기능
# 함수 이름: addNumber
# 매개 변수: *nums
# 반환값: 계산 결과
# ----------------------------------------------------------------------------------------------
def addNumber(*nums):
    print(type(nums))
    ret = 0
    for d in nums:
        ret = ret + d
    return ret

# 함수 사용, 즉 호출 ================================================
print(addNumber(1, 2, 3)) # 받은 여러가지 값을 튜플로 저장함 >> 튜플의 값들을 더하면 됨
print(addNumber(10))
print(addNumber())

# 원래 range() 사용 불가이지만, *을 찍고 반복이 가능한 시퀀스를 주면 내부의 모든 원소 하나씩 풀어서 전달. 즉 언패킹 함.
print( addNumber(*range(1,11)) )

a = [11, 22, 33, 44]
print(a)
print(*a, sep='-') # a를 언패킹해서 각각 따로 출력함.

aTuple = 'a', 'b', 'c'
aDict = { 'name':'Hong', 'age':100 }

print(a, aTuple, aDict)
print(*aTuple, sep = '-')
print(*aDict, sep = '-')